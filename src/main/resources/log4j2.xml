<?xml version="1.0" encoding="UTF-8"?>
<Configuration>
    <Appenders>
        <Console name="console" target="SYSTEM_OUT">
            <PatternLayout pattern="%5p [%c] %m%n" />
        </Console>
    </Appenders>

    <Loggers>

        <!-- Application Logger -->
        <Logger name="com.erowm" level="DEBUG" additivity="false">	<!-- DEBUG -->
            <AppenderRef ref="console" />
        </Logger>


        <!-- SQL Loggers -->

        <!-- jdbc connection 정보 로그를 생성 -->
        <Logger name="jdbc.connection" level="INFO" additivity="false">	<!-- INFO -->
            <AppenderRef ref="console" />
        </Logger>

        <!-- SQL문만을 로그로 남기며, PreparedStatement일 경우 관련된 argument 값으로 대체된 SQL문이 보여진다. -->
        <Logger name="jdbc.sqlonly" level="INFO" additivity="false">	<!-- INFO -->
            <AppenderRef ref="console" />
        </Logger>

        <!-- SQL문과 해당 SQL을 실행시키는데 수행된 시간 정보(milliseconds)를 포함한다. -->
        <Logger name="jdbc.sqltiming" level="OFF" additivity="false">
            <AppenderRef ref="console" />
        </Logger>

        <!-- ResultSet을 제외한 모든 JDBC 호출 정보를 로그로 남긴다. 많은 양의 로그가 생성되므로 특별히 JDBC 문제를 추적해야 할 필요가 있는 경우를 제외하고는 사용을 권장하지 않는다. -->
        <Logger name="jdbc.audit" level="OFF" additivity="false">
            <AppenderRef ref="console" />
        </Logger>

        <!-- ResultSet을 포함한 모든 JDBC 호출 정보를 로그로 남기므로 매우 방대한 양의 로그가 생성된다 -->
        <Logger name="jdbc.resultset" level="OFF" additivity="false">
            <AppenderRef ref="console" />
        </Logger>

        <!-- 쿼리문의 결과값을 예쁘게 정리된 테이블 모양으로 로그를 찍어준다. (log4jdbc-remix 사용해야함. pom.xml에 라이브러리 추가) -->
        <Logger name="jdbc.resultsettable" level="INFO" additivity="false">	<!-- INFO -->
            <AppenderRef ref="console" />
        </Logger>

        <!-- SQL Loggers End -->


        <!-- Root Logger -->
        <Root level="OFF">
            <AppenderRef ref="console"/>
        </Root>

    </Loggers>
</Configuration>